package pl.polsl.pawel.jurkiewicz.GUI;

import pl.polsl.pawel.jurkiewicz.main.Core;
import pl.polsl.pawel.jurkiewicz.view.Results;
import pl.polsl.pawel.jurkiewicz.model.ConversionHistory;

/**
 * The main frame for the number converter application. This GUI allows the user
 * to convert a number from one numeral system to another. It also provides a
 * history feature to view past conversions.
 *
 * @author paweljurkiewicz
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame. Initializes the conversion history.
     */
    public NewJFrame() {
        initComponents();
        his = new ConversionHistory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        Button = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Converter");

        Button.setForeground(new java.awt.Color(255, 102, 102));
        Button.setMnemonic('D');
        Button.setText("Convert");
        Button.setToolTipText("press button to convert");
        Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonActionPerformed(evt);
            }
        });

        jTextField1.setToolTipText("System to convert from");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setToolTipText("System to convert to");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.setToolTipText("Number to be converted");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextField5.setToolTipText("Result:");

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("System");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("From binary");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("to triple");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("to decimal");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("to hexadecimal");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("From triple");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("to binary");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("to decimal");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("to hexadecimal");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("From Decimal");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("to binary");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("to triple");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("to hexadecimal");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("From hexadecimal");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("to binary");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("to triple");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("to decimal");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 153, 255));
        jLabel1.setText("CONVERTER");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        jLabel2.setText("Number");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        jLabel3.setText("Input system");

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        jLabel4.setText("Output system");

        jButton1.setMnemonic('h');
        jButton1.setText("History");
        jButton1.setToolTipText("Press to see convertion history");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField4.setToolTipText("type number to filter history input system");
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        jLabel5.setText("Parameter");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(33, 33, 33))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Button, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(jTextField5))
                        .addGap(38, 38, 38)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(209, 209, 209))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Button)
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jTextField3.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Action listener for the "Convert" button. It triggers the conversion
     * process using the provided input and output systems and displays the
     * result in the result text field.
     *
     * @param evt the event triggered by clicking the "Convert" button
     */

    private void ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonActionPerformed
        String[] ar = new String[3];
        ar[0] = (jTextField3.getText());
        ar[1] = (jTextField1.getText());
        ar[2] = (jTextField2.getText());

        Core core = new Core();

        core.handle(ar);

        String t = Results.getOut();
        jTextField5.setText(t);

    }//GEN-LAST:event_ButtonActionPerformed

    /**
     * Action listener for the input system text field (jTextField1). Handles
     * actions triggered in the input system field.
     *
     * @param evt the event triggered by input in the input system field
     */

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed

    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * Action listener for the output system text field (jTextField2). Handles
     * actions triggered in the output system field.
     *
     * @param evt the event triggered by input in the output system field
     */
    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed

    }//GEN-LAST:event_jTextField2ActionPerformed

    /**
     * Action listener for the number text field (jTextField3). Handles actions
     * triggered in the number input field.
     *
     * @param evt the event triggered by input in the number field
     */
    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    /**
     * Mouse click event handler for the JTree (jTree1). This method sets the
     * appropriate input and output systems based on the tree node selected.
     *
     * @param evt the mouse event triggered by a click in the tree
     */

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        // Get the selected node
        javax.swing.tree.DefaultMutableTreeNode selectedNode
                = (javax.swing.tree.DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();

        if (selectedNode == null) {
            return; // Do nothing if no node is selected
        }
        // Get the name of the selected node
        String nodeName = selectedNode.toString();

        // Determine input and output systems based on node name
        switch (nodeName) {
            case "to binary":
                jTextField1.setText(getParentNodeName(selectedNode));
                jTextField2.setText("2");
                break;
            case "to triple":
                jTextField1.setText(getParentNodeName(selectedNode));
                jTextField2.setText("3");
                break;
            case "to decimal":
                jTextField1.setText(getParentNodeName(selectedNode));
                jTextField2.setText("10");
                break;
            case "to hexadecimal":
                jTextField1.setText(getParentNodeName(selectedNode));
                jTextField2.setText("16");
                break;
            default:
                // Do nothing for non-leaf nodes or other nodes
                break;
        }
    }//GEN-LAST:event_jTree1MouseClicked

    /**
     * Action listener for the "History" button. Displays the conversion history
     * in a new window.
     *
     * @param evt the event triggered by clicking the "History" button
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        HistoryWindow history = new HistoryWindow(message());

        history.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Action listener for the history filter text field (jTextField4). Allows
     * the user to filter the history by the input system.
     *
     * @param evt the event triggered by input in the history filter field
     */
    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    /**
     * Generates a formatted history message to display in the History window.
     * The history can be filtered based on the input system specified in
     * jTextField4.
     *
     * @return a string representing the history of conversions
     */
    private String message() {
        String result = "";

        if (jTextField4.getText().equals("")) {
            for (String s : his.getHistory()) {
                result = result + s + "\n";
            }
        } else {
            for (String s : his.filterAndSimplifyHistory(Integer.parseInt(jTextField4.getText()))) {
                result = result + s + "\n";
            }
        }

        return result;
    }

    /**
     * Sets the static ConversionHistory instance.
     *
     * @param h the ConversionHistory object to set
     */
    public static void setHis(ConversionHistory h) {
        his = h;
    }

    /**
     * Gets the static ConversionHistory instance.
     *
     * @return the ConversionHistory object
     */
    public static ConversionHistory getHis() {
        return his;
    }

    /**
     * Helper method to get the input system name based on the parent node name.
     *
     * @param node the node whose parent name will be used to determine the
     * input system
     * @return the input system as a string
     */
    private String getParentNodeName(javax.swing.tree.DefaultMutableTreeNode node) {
        javax.swing.tree.DefaultMutableTreeNode parentNode = (javax.swing.tree.DefaultMutableTreeNode) node.getParent();
        if (parentNode == null) {
            return "";
        }

        String parentName = parentNode.toString();

        switch (parentName) {
            case "From binary":
                return "2";
            case "From triple":
                return "3";
            case "From Decimal":
                return "10";
            case "From hexadecimal":
                return "16";
            default:
                return "";
        }
    }

    /**
     * Sets the values of the input fields (input system, output system, and
     * number to convert).
     *
     * @param n1 the input system
     * @param n2 the output system
     * @param n3 the number to convert
     */
    public void setFields(String n1, String n2, String n3) {
        jTextField1.setText(n1);
        jTextField2.setText(n2);
        jTextField3.setText(n3);
    }

    /**
     * Main method to launch the application. If the arguments are provided, it
     * initializes the frame with those values.
     *
     * @param args the command line arguments (number, input system, output
     * system)
     */
    public static void main(String args[]) {
        if (args.length == 3) {
            String inputSystem = args[1];
            String outputSystem = args[2];
            String numberToConvert = args[0];

            NewJFrame frame = new NewJFrame();

            frame.setFields(inputSystem, outputSystem, numberToConvert);

            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    frame.setVisible(true);
                }
            });
        } else {
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new NewJFrame().setVisible(true);
                }
            });
        }
    }

    /**
     * Static variable for storing the conversion history.
     */
    private static ConversionHistory his;

    private String historyMessage;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
